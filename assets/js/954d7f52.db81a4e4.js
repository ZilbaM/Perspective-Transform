"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[171],{260:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"api/interfaces/PerspectiveTransformProps","title":"PerspectiveTransformProps","description":"react-perspective-transform","source":"@site/docs/api/interfaces/PerspectiveTransformProps.md","sourceDirName":"api/interfaces","slug":"/api/interfaces/PerspectiveTransformProps","permalink":"/react-perspective-transform/api/interfaces/PerspectiveTransformProps","draft":false,"unlisted":false,"editUrl":"https://github.com/ZilbaM/react-perspective-transform/edit/main/docs/docs/api/interfaces/PerspectiveTransformProps.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Corner","permalink":"/react-perspective-transform/api/interfaces/Corner"},"next":{"title":"Points","permalink":"/react-perspective-transform/api/interfaces/Points"}}');var t=s(4848),i=s(8453);const c={},o=void 0,l={},d=[{value:"Properties",id:"properties",level:2},{value:"children",id:"children",level:3},{value:"editable?",id:"editable",level:3},{value:"onEditableChange()?",id:"oneditablechange",level:3},{value:"Parameters",id:"parameters",level:4},{value:"nextEditable",id:"nexteditable",level:5},{value:"Returns",id:"returns",level:4},{value:"onPointsChange()?",id:"onpointschange",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"points",id:"points",level:5},{value:"Returns",id:"returns-1",level:4},{value:"points?",id:"points-1",level:3},{value:"storageKey?",id:"storagekey",level:3},{value:"toggleKeys?",id:"togglekeys",level:3}];function a(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"/react-perspective-transform/api/",children:(0,t.jsx)(r.strong,{children:"react-perspective-transform"})})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"/react-perspective-transform/api/",children:"react-perspective-transform"})," / PerspectiveTransformProps"]}),"\n",(0,t.jsx)(r.h1,{id:"interface-perspectivetransformprops",children:"Interface: PerspectiveTransformProps"}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L41",children:"src/PerspectiveTransform.tsx:41"})]}),"\n",(0,t.jsx)(r.p,{children:"Props for the PerspectiveTransform component."}),"\n",(0,t.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(r.h3,{id:"children",children:"children"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"children"}),": ",(0,t.jsx)(r.code,{children:"ReactNode"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L46",children:"src/PerspectiveTransform.tsx:46"})]}),"\n",(0,t.jsx)(r.p,{children:"The child node(s) to which we apply the perspective transform.\nUsually an image, video, or other content."}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"editable",children:"editable?"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"optional"})," ",(0,t.jsx)(r.strong,{children:"editable"}),": ",(0,t.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L70",children:"src/PerspectiveTransform.tsx:70"})]}),"\n",(0,t.jsx)(r.p,{children:"Whether the component is currently in edit mode. If provided, this prop controls\nedit mode externally. If omitted, SHIFT+[toggleKeys] toggles a local edit mode."}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"oneditablechange",children:"onEditableChange()?"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"optional"})," ",(0,t.jsx)(r.strong,{children:"onEditableChange"}),": (",(0,t.jsx)(r.code,{children:"nextEditable"}),") => ",(0,t.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L76",children:"src/PerspectiveTransform.tsx:76"})]}),"\n",(0,t.jsx)(r.p,{children:"If edit mode is controlled from outside, this callback is triggered when SHIFT+[toggleKeys]\nis pressed. Passes the next boolean value for edit mode."}),"\n",(0,t.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(r.h5,{id:"nexteditable",children:"nextEditable"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"boolean"})}),"\n",(0,t.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"void"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"onpointschange",children:"onPointsChange()?"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"optional"})," ",(0,t.jsx)(r.strong,{children:"onPointsChange"}),": (",(0,t.jsx)(r.code,{children:"points"}),") => ",(0,t.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L57",children:"src/PerspectiveTransform.tsx:57"})]}),"\n",(0,t.jsx)(r.p,{children:"Called whenever corner points change, e.g., when a user drags them."}),"\n",(0,t.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsx)(r.h5,{id:"points",children:"points"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"/react-perspective-transform/api/interfaces/Points",children:(0,t.jsx)(r.code,{children:"Points"})})}),"\n",(0,t.jsx)(r.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"void"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"points-1",children:"points?"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"optional"})," ",(0,t.jsx)(r.strong,{children:"points"}),": ",(0,t.jsx)(r.a,{href:"/react-perspective-transform/api/interfaces/Points",children:(0,t.jsx)(r.code,{children:"Points"})})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L52",children:"src/PerspectiveTransform.tsx:52"})]}),"\n",(0,t.jsx)(r.p,{children:"If provided, points become controlled from outside.\nThe component will always use these points instead of its local state."}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"storagekey",children:"storageKey?"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"optional"})," ",(0,t.jsx)(r.strong,{children:"storageKey"}),": ",(0,t.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L64",children:"src/PerspectiveTransform.tsx:64"})]}),"\n",(0,t.jsxs)(r.p,{children:["If set, the component will store and retrieve corner points from localStorage\nunder this key (uncontrolled scenario). If ",(0,t.jsx)(r.code,{children:"points"})," is controlled, localStorage\nlogic is not used."]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"togglekeys",children:"toggleKeys?"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"optional"})," ",(0,t.jsx)(r.strong,{children:"toggleKeys"}),": ",(0,t.jsx)(r.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L82",children:"src/PerspectiveTransform.tsx:82"})]}),"\n",(0,t.jsx)(r.p,{children:'An array of lowercase keys that, when pressed with SHIFT, toggle edit mode.\nDefaults to ["p"].'})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>o});var n=s(6540);const t={},i=n.createContext(t);function c(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);