"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[12],{2105:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"api/functions/PerspectiveTransform","title":"PerspectiveTransform","description":"react-perspective-transform","source":"@site/docs/api/functions/PerspectiveTransform.md","sourceDirName":"api/functions","slug":"/api/functions/PerspectiveTransform","permalink":"/react-perspective-transform/api/functions/PerspectiveTransform","draft":false,"unlisted":false,"editUrl":"https://github.com/ZilbaM/react-perspective-transform/edit/main/docs/docs/api/functions/PerspectiveTransform.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"README","permalink":"/react-perspective-transform/api/"},"next":{"title":"Corner","permalink":"/react-perspective-transform/api/interfaces/Corner"}}');var t=n(4848),c=n(8453);const o={},i=void 0,a={},p=[{value:"Parameters",id:"parameters",level:2},{value:"props",id:"props",level:3},{value:"Returns",id:"returns",level:2}];function d(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"/react-perspective-transform/api/",children:(0,t.jsx)(r.strong,{children:"react-perspective-transform"})})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"/react-perspective-transform/api/",children:"react-perspective-transform"})," / PerspectiveTransform"]}),"\n",(0,t.jsx)(r.h1,{id:"function-perspectivetransform",children:"Function: PerspectiveTransform()"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"PerspectiveTransform"}),"(",(0,t.jsx)(r.code,{children:"props"}),"): ",(0,t.jsx)(r.code,{children:"ReactNode"})," | ",(0,t.jsx)(r.code,{children:"Promise"}),"<",(0,t.jsx)(r.code,{children:"ReactNode"}),">"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/ZilbaM/react-perspective-transform/blob/0bebb08994811f7c5c3331829addf567b7ecffc1/src/PerspectiveTransform.tsx#L93",children:"src/PerspectiveTransform.tsx:93"})]}),"\n",(0,t.jsxs)(r.p,{children:["A React component that applies a perspective transform to its children.\nIt can be controlled (passing ",(0,t.jsx)(r.code,{children:"points"})," and ",(0,t.jsx)(r.code,{children:"editable"}),") or uncontrolled\n(managing points internally, optionally persisting them to localStorage)."]}),"\n",(0,t.jsxs)(r.p,{children:["In edit mode, users can drag corner handles to adjust the perspective.\nEdit mode can be toggled by SHIFT+[toggleKeys] or controlled via the ",(0,t.jsx)(r.code,{children:"editable"})," prop."]}),"\n",(0,t.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(r.h3,{id:"props",children:"props"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"/react-perspective-transform/api/interfaces/PerspectiveTransformProps",children:(0,t.jsx)(r.code,{children:"PerspectiveTransformProps"})})}),"\n",(0,t.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"ReactNode"})," | ",(0,t.jsx)(r.code,{children:"Promise"}),"<",(0,t.jsx)(r.code,{children:"ReactNode"}),">"]})]})}function l(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>i});var s=n(6540);const t={},c=s.createContext(t);function o(e){const r=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(c.Provider,{value:r},e.children)}}}]);